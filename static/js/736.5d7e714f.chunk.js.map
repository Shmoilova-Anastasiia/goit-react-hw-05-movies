{"version":3,"file":"static/js/736.5d7e714f.chunk.js","mappings":"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","sources":["Api/movies.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `80849c20aa63241eb028c4e7b7d0f3a8`,\n  include_adult: false,\n};\nexport const fetchTrendingMovies = async (page = 1, lng) => {\n  try {\n    const { data } = await axios.get('/trending/movie/day', {\n      params: {\n        page,\n        language: ' en - US',\n      },\n    });\n    return data.results;\n  } catch (error) {\n    alert('Oops, there is no movies');\n  }\n};\n\nexport const fetchSearchMovies = async (query = '', page = 1) => {\n  try {\n    const { data } = await axios.get(`/search/movie`, {\n      params: {\n        language: 'en-US',\n        page,\n        query,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    alert('Oops, there is no movie');\n  }\n};\n\nexport const fetchMovieDetails = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}`, {\n      params: {\n        language: 'en-US',\n      },\n    });\n    return data;\n  } catch (error) {\n    alert('Oops, there is no movie with that name');\n  }\n};\n\nexport const fetchMovieCast = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}/credits`, {\n      params: {\n        language: 'en-US',\n      },\n    });\n    return data.cast;\n  } catch (error) {\n    alert('Oops, there is no cast movie');\n  }\n};\n\nexport const fetchMovieReviews = async (id, page = 1) => {\n  try {\n    const { data } = await axios.get(\n      `/movie/${id}/reviews\n`,\n      {\n        params: {\n          language: 'en-US',\n        },\n      }\n    );\n    return data.results;\n  } catch (error) {\n    alert('Oops, we don`t have any reviews');\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const Image = styled.img`\n  display: block;\n  border: 2px solid rgba(0, 255, 0, 0.5);\n  border-radius: 5px;\n  width: 160px;\n`;\n\nexport const ListCast = styled.ul`\n  list-style: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 30px;\n  margin-bottom: 40px;\n`;\n\nexport const ItemCast = styled.li`\n  transition: scale 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    scale: 1.1;\n  }\n`;\n\nexport const NameCast = styled.h3`\n  max-width: 160px;\n  color: #fff;\n  font-size: 19px;\n  text-align: center;\n  font-weight: 500;\n  margin-top: 8px;\n`;\n\nexport const RoleCast = styled.p`\n  max-width: 160px;\n  color: rgb(255, 89, 0);\n  font-size: 14px;\n  text-align: center;\n  font-weight: 300;\n  margin-top: 6px;\n`;\n\nexport const ErrorCast = styled.p`\n  color: #fff;\n  font-size: 26px;\n  text-align: center;\n  font-weight: 300;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from '../../Api/movies';\nimport { Loader } from 'components/Loader/Loader';\n\nimport {\n  Image,\n  ListCast,\n  ItemCast,\n  NameCast,\n  RoleCast,\n  ErrorCast,\n} from './Cast.styled';\n\nconst pageStatus = {\n  INIT: 'init',\n  LOADING: 'loading',\n  SUCCESS: 'success',\n  ERROR: 'error',\n};\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [status, setStatus] = useState(pageStatus.INIT);\n\n  const params = useParams();\n  const id = params.movieId;\n\n  useEffect(() => {\n    setStatus(pageStatus.LOADING);\n    const getData = async () => {\n      try {\n        const data = await fetchMovieCast(id);\n        setCast(data);\n        setStatus(pageStatus.SUCCESS);\n      } catch (error) {\n        setStatus(pageStatus.ERROR);\n      }\n    };\n    getData();\n  }, [id]);\n\n  return (\n    <>\n      {status === pageStatus.LOADING && <Loader />}\n\n      {status === pageStatus.ERROR && (\n        <ErrorCast>ERROR, CAST NOT FOUND</ErrorCast>\n      )}\n\n      {status === pageStatus.SUCCESS && cast.length === 0 && (\n        <ErrorCast>CAST NOT FOUND</ErrorCast>\n      )}\n\n      {status === pageStatus.SUCCESS && (\n        <ListCast>\n          {cast?.map((item, index) => (\n            <ItemCast key={index}>\n              <Image\n                src={\n                  item.profile_path ? (\n                    `https://image.tmdb.org/t/p/w200${item.profile_path}`\n                  ) : (\n                    <p>NotFound</p>\n                  )\n                }\n                alt=\"\"\n              />\n              <NameCast>{item.original_name}</NameCast>\n              <RoleCast>{item.character ? item.character : 'role'}</RoleCast>\n            </ItemCast>\n          ))}\n        </ListCast>\n      )}\n    </>\n  );\n};\nexport default Cast;\n","import styled from '@emotion/styled';\n\nexport const LoaderStyle = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  margin: 15px auto;\n`;\n","import { ThreeCircles } from 'react-loader-spinner';\nimport { LoaderStyle } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderStyle>\n      <ThreeCircles\n        height=\"100\"\n        width=\"100\"\n        color=\"rgba(0, 255, 0, 1)\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"three-circles-rotating\"\n        outerCircleColor=\"\"\n        innerCircleColor=\"\"\n        middleCircleColor=\"\"\n      />\n    </LoaderStyle>\n  );\n};\n"],"names":["axios","api_key","include_adult","fetchTrendingMovies","page","params","language","data","results","alert","fetchSearchMovies","query","fetchMovieDetails","id","fetchMovieCast","cast","fetchMovieReviews","Image","styled","ListCast","ItemCast","NameCast","RoleCast","ErrorCast","pageStatus","useState","setCast","status","setStatus","useParams","movieId","useEffect","getData","Loader","length","map","item","index","src","profile_path","alt","original_name","character","LoaderStyle","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor"],"sourceRoot":""}