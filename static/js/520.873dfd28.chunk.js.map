{"version":3,"file":"static/js/520.873dfd28.chunk.js","mappings":"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","sources":["Api/movies.js","components/MovieItem/MovieItem.styled.jsx","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/HomePage/HomePage.styled.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `80849c20aa63241eb028c4e7b7d0f3a8`,\n  include_adult: false,\n};\nexport const fetchTrendingMovies = async (page = 1, lng) => {\n  try {\n    const { data } = await axios.get('/trending/movie/day', {\n      params: {\n        page,\n        language: ' en - US',\n      },\n    });\n    return data.results;\n  } catch (error) {\n    alert('Oops, there is no movies');\n  }\n};\n\nexport const fetchSearchMovies = async (query = '', page = 1) => {\n  try {\n    const { data } = await axios.get(`/search/movie`, {\n      params: {\n        language: 'en-US',\n        page,\n        query,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    alert('Oops, there is no movie');\n  }\n};\n\nexport const fetchMovieDetails = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}`, {\n      params: {\n        language: 'en-US',\n      },\n    });\n    return data;\n  } catch (error) {\n    alert('Oops, there is no movie with that name');\n  }\n};\n\nexport const fetchMovieCast = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}/credits`, {\n      params: {\n        language: 'en-US',\n      },\n    });\n    return data.cast;\n  } catch (error) {\n    alert('Oops, there is no cast movie');\n  }\n};\n\nexport const fetchMovieReviews = async (id, page = 1) => {\n  try {\n    const { data } = await axios.get(\n      `/movie/${id}/reviews\n`,\n      {\n        params: {\n          language: 'en-US',\n        },\n      }\n    );\n    return data.results;\n  } catch (error) {\n    alert('Oops, we don`t have any reviews');\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const ItemMovie = styled.li`\n  transition: scale 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    scale: 1.1;\n  }\n`;\n\nexport const TitleMovie = styled.h2`\n  display: flex;\n  justify-content: center;\n  color: #fff;\n  font-size: 20px;\n  font-weight: 500;\n  text-align: center;\n  text-transform: uppercase;\n  padding-top: 8px;\n  max-width: 240px;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: rgb(255, 89, 0);\n    font-weight: 600;\n  }\n`;\n\nexport const ImgMovie = styled.img`\n  width: 240px;\n  height: 80%;\n  border-radius: 10px;\n  border: 3px solid rgba(0, 255, 0, 0.5);\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    animation: glow 800ms ease-out infinite alternate;\n    background: #222922;\n    background: linear-gradient(#333933, #222922);\n    border-color: #393;\n    box-shadow: 0 0 5px rgba(0, 255, 0, 0.2), inset 0 0 5px rgba(0, 255, 0, 0.1);\n    color: #efe;\n    outline: none;\n  }\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { TitleMovie, ItemMovie, ImgMovie } from './MovieItem.styled';\nimport defaultImg from '../../image/Not Found.jpg';\n\nexport const MovieItem = ({ url, title, activeId, location }) => {\n  return (\n    <ItemMovie>\n      <Link to={`/movies/${activeId}`} state={{ from: location }}>\n        <ImgMovie\n          src={\n            url !== null ? `https://image.tmdb.org/t/p/w300${url}` : defaultImg\n          }\n          alt={title}\n        />\n        <TitleMovie>{title}</TitleMovie>\n      </Link>\n    </ItemMovie>\n  );\n};\n\nMovieItem.propTypes = {\n  url: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  activeId: PropTypes.number.isRequired,\n  location: PropTypes.shape({\n    state: PropTypes.string,\n  }),\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\nlist-style: none;\ndisplay: flex;\nlist-style: none;\n  flex-wrap: wrap;\n  gap: 30px;\n  justify-content: center;\n  padding-bottom: 60px;\n}`;\n","import React from 'react';\n\nimport { useLocation } from 'react-router-dom';\nimport { MovieItem } from 'components/MovieItem/MovieItem';\nimport { List } from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <List>\n        {movies?.map(item => {\n          return (\n            <MovieItem\n              location={location}\n              key={item.original_title}\n              title={item.original_title}\n              url={item.poster_path}\n              activeId={item.id}\n            />\n          );\n        })}\n      </List>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  background: radial-gradient(\n    circle,\n    rgba(224, 232, 236, 1) 0%,\n    rgba(137, 142, 143, 1) 100%\n  );\n  max-width: 1170px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n  padding-bottom: 30px;\n`;\n\nexport const PageTitle = styled.h1`\n  text-align: center;\n  padding: 30px 0;\n  color: #fff;\n  font-size: 35px;\n  font-weight: 900;\n  text-transform: uppercase;\n`;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  padding: 50px 15px 0 15px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 25px;\n`;\n\nexport const ButtonSearch = styled.button`\n  background: #222;\n  background: linear-gradient(#333, #222);\n  box-sizing: border-box;\n  border: 1px solid #393;\n  border-radius: 10px;\n  color: #fff;\n  display: block;\n  float: left;\n  font-size: 18px;\n  font-weight: 600;\n  height: 40px;\n  line-height: 40px;\n  margin: 0;\n  padding: 0;\n  position: relative;\n  width: 100px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background: #292929;\n    background: linear-gradient(#393939, #292929);\n    color: rgb(255, 89, 0);\n    outline: none;\n  }\n`;\n\nexport const Input = styled.input`\n  margin-top: 8px;\n  margin-bottom: 30px;\n  height: 40px;\n  width: 500px;\n  background: transparent;\n  outline: none;\n  border-radius: 10px;\n  border: 2px solid #444;\n  font-size: 23px;\n  color: rgb(220, 231, 255);\n  padding-left: 15px;\n  padding-right: 15px;\n  padding-top: auto;\n\n  &:focus {\n    animation: glow 800ms ease-out infinite alternate;\n    background: #222922;\n    background: linear-gradient(#333933, #222922);\n    border-color: #393;\n    box-shadow: 0 0 5px rgba(0, 255, 0, 0.2), inset 0 0 5px rgba(0, 255, 0, 0.1);\n    color: #efe;\n    outline: none;\n  }\n\n  &::placeholder {\n    color: #a09b9b;\n    font-size: 23px;\n  }\n`;\n\nexport const Label = styled.label`\n  color: rgb(220, 231, 255);\n  font-size: 29px;\n  font-weight: 700;\n  text-transform: uppercase;\n  text-align: center;\n  margin-bottom: 15px;\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, ButtonSearch, Input, Label } from './SearchForm.styled';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const hanleSubmit = event => {\n    event.preventDefault();\n    onSubmit(query);\n    setQuery('');\n  };\n\n  const handleChange = event => {\n    setQuery(event.target.value);\n  };\n  return (\n    <Form onSubmit={hanleSubmit}>\n      <Label htmlFor=\"search\">Find movie by name</Label>\n      <Input\n        type=\"text\"\n        name=\"search\"\n        value={query}\n        onChange={handleChange}\n        placeholder=\"Search movie...\"\n        autoComplete=\"off\"\n      />\n      <ButtonSearch type=\"submit\">Search</ButtonSearch>\n    </Form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { fetchSearchMovies } from 'Api/movies';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\n\nimport { Container } from 'pages/HomePage/HomePage.styled';\n\nconst Status = {\n  INIT: 'init',\n  LOADING: 'loading',\n  SUCCESS: 'success',\n  ERROR: 'error',\n};\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState(Status.INIT);\n\n  const search = searchParams.get('search') ?? '';\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const data = await fetchSearchMovies(search);\n        setMovies(data);\n        setStatus(Status.SUCCESS);\n      } catch (error) {\n        setStatus(Status.ERROR);\n        console.log(error.message);\n      }\n    };\n    if (search) {\n      getData();\n    } else {\n      setMovies([]);\n    }\n  }, [search]);\n\n  const handleUpdateSearch = value => {\n    setSearchParams({ search: value });\n  };\n\n  return (\n    <Container>\n      <SearchForm onSubmit={handleUpdateSearch} />\n      {status === Status.SUCCESS && movies.length > 0 && (\n        <MovieList movies={movies}  />\n      )}\n      {status === Status.SUCCESS && movies.length === 0 && (\n        <p>Sorry, but nothing was found for {search}! Try again!</p>\n      )}\n    </Container>\n  );\n};\nexport default Movies;\n"],"names":["axios","api_key","include_adult","fetchTrendingMovies","page","params","language","data","results","alert","fetchSearchMovies","query","fetchMovieDetails","id","fetchMovieCast","cast","fetchMovieReviews","ItemMovie","styled","TitleMovie","ImgMovie","MovieItem","url","title","activeId","location","to","state","from","src","defaultImg","alt","List","MovieList","movies","useLocation","map","item","original_title","poster_path","Container","PageTitle","Form","ButtonSearch","Input","Label","SearchForm","onSubmit","useState","setQuery","event","preventDefault","htmlFor","type","name","value","onChange","target","placeholder","autoComplete","Status","useSearchParams","searchParams","setSearchParams","setMovies","status","setStatus","search","get","useEffect","getData","console","log","message","length"],"sourceRoot":""}