{"version":3,"file":"static/js/680.f2694e98.chunk.js","mappings":"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","sources":["Api/movies.js","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MovieItem/MovieItem.styled.jsx","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/HomePage/HomePage.jsx","pages/HomePage/HomePage.styled.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `80849c20aa63241eb028c4e7b7d0f3a8`,\n  include_adult: false,\n};\nexport const fetchTrendingMovies = async (page = 1, lng) => {\n  try {\n    const { data } = await axios.get('/trending/movie/day', {\n      params: {\n        page,\n        language: ' en - US',\n      },\n    });\n    return data.results;\n  } catch (error) {\n    alert('Oops, there is no movies');\n  }\n};\n\nexport const fetchSearchMovies = async (query = '', page = 1) => {\n  try {\n    const { data } = await axios.get(`/search/movie`, {\n      params: {\n        language: 'en-US',\n        page,\n        query,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    alert('Oops, there is no movie');\n  }\n};\n\nexport const fetchMovieDetails = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}`, {\n      params: {\n        language: 'en-US',\n      },\n    });\n    return data;\n  } catch (error) {\n    alert('Oops, there is no movie with that name');\n  }\n};\n\nexport const fetchMovieCast = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}/credits`, {\n      params: {\n        language: 'en-US',\n      },\n    });\n    return data.cast;\n  } catch (error) {\n    alert('Oops, there is no cast movie');\n  }\n};\n\nexport const fetchMovieReviews = async (id, page = 1) => {\n  try {\n    const { data } = await axios.get(\n      `/movie/${id}/reviews\n`,\n      {\n        params: {\n          language: 'en-US',\n        },\n      }\n    );\n    return data.results;\n  } catch (error) {\n    alert('Oops, we don`t have any reviews');\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const LoaderStyle = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  margin: 15px auto;\n`;\n","import { ThreeCircles } from 'react-loader-spinner';\nimport { LoaderStyle } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderStyle>\n      <ThreeCircles\n        height=\"100\"\n        width=\"100\"\n        color=\"rgba(0, 255, 0, 1)\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"three-circles-rotating\"\n        outerCircleColor=\"\"\n        innerCircleColor=\"\"\n        middleCircleColor=\"\"\n      />\n    </LoaderStyle>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ItemMovie = styled.li`\n  transition: scale 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    scale: 1.1;\n  }\n`;\n\nexport const TitleMovie = styled.h2`\n  display: flex;\n  justify-content: center;\n  color: #fff;\n  font-size: 20px;\n  font-weight: 500;\n  text-align: center;\n  text-transform: uppercase;\n  padding-top: 8px;\n  max-width: 240px;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: rgb(255, 89, 0);\n    font-weight: 600;\n  }\n`;\n\nexport const ImgMovie = styled.img`\n  width: 240px;\n  height: 80%;\n  border-radius: 10px;\n  border: 3px solid rgba(0, 255, 0, 0.5);\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    animation: glow 800ms ease-out infinite alternate;\n    background: #222922;\n    background: linear-gradient(#333933, #222922);\n    border-color: #393;\n    box-shadow: 0 0 5px rgba(0, 255, 0, 0.2), inset 0 0 5px rgba(0, 255, 0, 0.1);\n    color: #efe;\n    outline: none;\n  }\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { TitleMovie, ItemMovie, ImgMovie } from './MovieItem.styled';\nimport defaultImg from '../../image/Not Found.jpg';\n\nexport const MovieItem = ({ url, title, activeId, location }) => {\n  return (\n    <ItemMovie>\n      <Link to={`/movies/${activeId}`} state={{ from: location }}>\n        <ImgMovie\n          src={\n            url !== null ? `https://image.tmdb.org/t/p/w300${url}` : defaultImg\n          }\n          alt={title}\n        />\n        <TitleMovie>{title}</TitleMovie>\n      </Link>\n    </ItemMovie>\n  );\n};\n\nMovieItem.propTypes = {\n  url: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  activeId: PropTypes.number.isRequired,\n  location: PropTypes.shape({\n    state: PropTypes.string,\n  }),\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\nlist-style: none;\ndisplay: flex;\nlist-style: none;\n  flex-wrap: wrap;\n  gap: 30px;\n  justify-content: center;\n  padding-bottom: 60px;\n}`;\n","import React from 'react';\n\nimport { useLocation } from 'react-router-dom';\nimport { MovieItem } from 'components/MovieItem/MovieItem';\nimport { List } from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <List>\n        {movies?.map(item => {\n          return (\n            <MovieItem\n              location={location}\n              key={item.original_title}\n              title={item.original_title}\n              url={item.poster_path}\n              activeId={item.id}\n            />\n          );\n        })}\n      </List>\n    </>\n  );\n};\n","import { Container, PageTitle } from './HomePage.styled';\n\nimport { fetchTrendingMovies } from 'Api/movies';\nimport React, { useState, useEffect } from 'react';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Loader } from '../../components/Loader/Loader';\n\nconst pageStatus = {\n  INIT: 'init',\n  LOADING: 'loading',\n  SUCCESS: 'success',\n  ERROR: 'error',\n};\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState(pageStatus.INIT);\n\n  useEffect(() => {\n    setStatus(pageStatus.LOADING);\n\n    async function getData() {\n      try {\n        const data = await fetchTrendingMovies();\n        setMovies(data);\n        setStatus(pageStatus.SUCCESS);\n      } catch {\n        setStatus(pageStatus.ERROR);\n      }\n    }\n    getData();\n  }, []);\n\n  return (\n    <>\n      <Container>\n        <PageTitle>Trending Movies</PageTitle>\n        {status === pageStatus.ERROR && <p>ERROOOOOOR</p>}\n        {(status === pageStatus.LOADING || status === pageStatus.INIT) && (\n          <Loader />\n        )}\n\n        {status === pageStatus.SUCCESS && <MovieList movies={movies} />}\n      </Container>\n    </>\n  );\n};\nexport default HomePage;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  background: radial-gradient(\n    circle,\n    rgba(224, 232, 236, 1) 0%,\n    rgba(137, 142, 143, 1) 100%\n  );\n  max-width: 1170px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n  padding-bottom: 30px;\n`;\n\nexport const PageTitle = styled.h1`\n  text-align: center;\n  padding: 30px 0;\n  color: #fff;\n  font-size: 35px;\n  font-weight: 900;\n  text-transform: uppercase;\n`;\n"],"names":["axios","api_key","include_adult","fetchTrendingMovies","page","params","language","data","results","alert","fetchSearchMovies","query","fetchMovieDetails","id","fetchMovieCast","cast","fetchMovieReviews","LoaderStyle","styled","Loader","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","ItemMovie","TitleMovie","ImgMovie","MovieItem","url","title","activeId","location","to","state","from","src","defaultImg","alt","List","MovieList","movies","useLocation","map","item","original_title","poster_path","pageStatus","useState","setMovies","status","setStatus","useEffect","getData","Container","PageTitle"],"sourceRoot":""}