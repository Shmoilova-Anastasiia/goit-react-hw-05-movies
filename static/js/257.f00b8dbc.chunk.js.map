{"version":3,"file":"static/js/257.f00b8dbc.chunk.js","mappings":"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","sources":["Api/movies.js","pages/HomePage/HomePage.styled.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `80849c20aa63241eb028c4e7b7d0f3a8`,\n  include_adult: false,\n};\nexport const fetchTrendingMovies = async (page = 1, lng) => {\n  try {\n    const { data } = await axios.get('/trending/movie/day', {\n      params: {\n        page,\n        language: ' en - US',\n      },\n    });\n    return data.results;\n  } catch (error) {\n    alert('Oops, there is no movies');\n  }\n};\n\nexport const fetchSearchMovies = async (query = '', page = 1) => {\n  try {\n    const { data } = await axios.get(`/search/movie`, {\n      params: {\n        language: 'en-US',\n        page,\n        query,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    alert('Oops, there is no movie');\n  }\n};\n\nexport const fetchMovieDetails = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}`, {\n      params: {\n        language: 'en-US',\n      },\n    });\n    return data;\n  } catch (error) {\n    alert('Oops, there is no movie with that name');\n  }\n};\n\nexport const fetchMovieCast = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}/credits`, {\n      params: {\n        language: 'en-US',\n      },\n    });\n    return data.cast;\n  } catch (error) {\n    alert('Oops, there is no cast movie');\n  }\n};\n\nexport const fetchMovieReviews = async (id, page = 1) => {\n  try {\n    const { data } = await axios.get(\n      `/movie/${id}/reviews\n`,\n      {\n        params: {\n          language: 'en-US',\n        },\n      }\n    );\n    return data.results;\n  } catch (error) {\n    alert('Oops, we don`t have any reviews');\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  background: radial-gradient(\n    circle,\n    rgba(224, 232, 236, 1) 0%,\n    rgba(137, 142, 143, 1) 100%\n  );\n  max-width: 1170px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n  padding-bottom: 30px;\n`;\n\nexport const PageTitle = styled.h1`\n  text-align: center;\n  padding: 30px 0;\n  color: #fff;\n  font-size: 35px;\n  font-weight: 900;\n  text-transform: uppercase;\n`;\n","import styled from '@emotion/styled';\n\nexport const Back = styled.button`\n  margin-top: 35px;\n  margin-bottom: 10px;\n  padding: 5px 20px;\n  color: rgb(220, 231, 255);\n\n  background: #222;\n  background: linear-gradient(#333, #222);\n  box-sizing: border-box;\n  border: 1px solid #393;\n  border-radius: 10px;\n\n  width: 100px;\n  height: 30px;\n  text-transform: uppercase;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: 550;\n  font-size: 14px;\n\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background: #292929;\n    background: linear-gradient(#393939, #292929);\n    color: rgb(255, 89, 0);\n  }\n`;\n\nexport const InfoBox = styled.div`\n  display: flex;\n  justify-content: flex-start;\n`;\n\nexport const ImageBox = styled.div`\n  margin-top: 20px;\n  padding: 5px 20px 5px 5px;\n`;\n\nexport const Image = styled.img`\n  height: 80%;\n  min-width: 240px;\n  max-width: 250px;\n  display: block;\n  border: 3px solid rgba(0, 255, 0, 0.5);\n  border-radius: 10px;\n`;\n\nexport const InfoText = styled.div`\n  width: 100%;\n`;\n\nexport const Caption = styled.h2`\n  padding: 20px 0 0 0;\n  margin-bottom: 20px;\n  color: #fff;\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 35px;\n  border-bottom: 1px solid rgba(0, 255, 0, 0.4);\n`;\n\nexport const Title = styled.h3`\n  color: rgb(255, 89, 0);\n  font-weight: 300;\n  text-transform: uppercase;\n  margin-bottom: 5px;\n  margin-top: 10px;\n`;\n\nexport const Text = styled.p`\n  color: #fff;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  gap: 15px;\n`;\n\nexport const LinkList = styled.ul`\n  list-style: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 25px;\n  padding: 30px;\n  margin-top: 20px;\n  border-top: 2px solid rgba(0, 255, 0, 0.4);\n`;\n\nexport const LinkItem = styled.li`\n  padding: 0px 5px;\n  border-radius: 5px;\n  border: 1px solid rgba(0, 255, 0, 0.4);\n`;\n\nexport const LinkMov = styled.a`\n  font-size: 25px;\n  color: #fff;\n  text-transform: uppercase;\n\n  &:hover,\n  &:focus {\n    color: rgb(255, 89, 0);\n  }\n`;\n\n// export const LinkActive = styled.a`\n//   font-size: 25px;\n//   font-weight: 500;\n//   color: rgb(255, 89, 0);\n//   text-transform: uppercase;\n// `;\n","import { Suspense, useRef, useEffect, useState } from 'react';\nimport { fetchMovieDetails } from 'Api/movies';\nimport { Container } from 'pages/HomePage/HomePage.styled';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport {\n  Back,\n  InfoBox,\n  ImageBox,\n  Image,\n  InfoText,\n  Caption,\n  Title,\n  Text,\n  List,\n  LinkList,\n  LinkItem,\n  LinkMov,\n} from './MovieDetails.styled';\nimport defaultImg from '../../image/Not Found.jpg';\n\nconst MovieDetails = () => {\n  // const activeClassName = ({ isActive }) =>\n  //   isActive ? `${LinkActive}` : `${LinkMov}`;\n\n  const location = useLocation();\n\n  const [film, setFilm] = useState([]);\n\n  const params = useParams();\n  const id = params?.movieId;\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const data = await fetchMovieDetails(id);\n        setFilm(data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    getData();\n  }, [id]);\n\n  return (\n    <Container>\n      <Link to={useRef(location.state?.from ?? '/').current}>\n        <Back>Back</Back>\n      </Link>\n      <InfoBox>\n        <ImageBox>\n          <Image\n            src={\n              film?.poster_path\n                ? `https://image.tmdb.org/t/p/w200${film.poster_path}`\n                : defaultImg\n            }\n            alt=\"\"\n          />\n        </ImageBox>\n\n        <InfoText>\n          <Caption>{film.original_title}</Caption>\n          <Title>Release date</Title>\n          <Text>\n            {film.release_date ? film.release_date : 'No data available'}\n          </Text>\n          <Title>Rating</Title>\n          <Text>{film.vote_average}</Text>\n          <Title>Genres</Title>\n          <List>\n            {film?.genres?.length === 0 ? (\n              <Text>No data available</Text>\n            ) : (\n              film?.genres?.map(item => (\n                <li key={item.name}>\n                  <Text>{item.name}</Text>\n                </li>\n              ))\n            )}\n          </List>\n          <Title>Overview</Title>\n          <Text>{film.overview ? film.overview : 'No data available'}</Text>\n        </InfoText>\n      </InfoBox>\n      <div>\n        <LinkList>\n          <LinkItem>\n            <NavLink\n              to=\"cast\"\n              // className={activeClassName}\n              state={{ from: location }}\n            >\n              <LinkMov>cast</LinkMov>\n            </NavLink>\n          </LinkItem>\n          <LinkItem>\n            <NavLink\n              to=\"reviews\"\n              // className={activeClassName}\n              state={location?.state ?? '/'}\n            >\n              <LinkMov>reviews</LinkMov>\n            </NavLink>\n          </LinkItem>\n        </LinkList>\n      </div>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\nexport default MovieDetails;\n"],"names":["axios","api_key","include_adult","fetchTrendingMovies","page","params","language","data","results","alert","fetchSearchMovies","query","fetchMovieDetails","id","fetchMovieCast","cast","fetchMovieReviews","Container","styled","PageTitle","Back","InfoBox","ImageBox","Image","InfoText","Caption","Title","Text","List","LinkList","LinkItem","LinkMov","location","useLocation","useState","film","setFilm","useParams","movieId","useEffect","getData","console","log","message","to","useRef","state","from","current","src","poster_path","defaultImg","alt","original_title","release_date","vote_average","genres","length","map","item","name","overview","Suspense"],"sourceRoot":""}